package core;import Graphic.ImageSheet;import Graphic.Render;import javafx.animation.AnimationTimer;import javafx.application.Application;import javafx.scene.Group;import javafx.scene.Scene;import javafx.scene.canvas.Canvas;import javafx.scene.image.Image;import javafx.stage.Stage;public class Main extends Application {    @Override    public void start(Stage primaryStage) {        //Create new Window        GameStage.generateWindow(primaryStage);        //Parent group        Group root = new Group();        Scene theScene = new Scene(root);        Canvas canvas = new Canvas(Config.SCREEN_WIDTH, Config.SCREEN_HEIGHT);        root.getChildren().add(canvas);        primaryStage.setScene(theScene);        primaryStage.setTitle(Config.TITLE);        //need to be inside class Render, manually add latter        primaryStage.show();        /*        | Initialization game (play (then choice level), credit or tutorial, choice level, load map, load game config, ...)         */        GameField.loadMap();        GameField.loadGameplay();        /*        | Game loop start         */        /*            |=======================================|            |   1. Player controller's input       |            |=======================================|             */            /*            |=======================================|            |   2. Render Everything                |            |=======================================|             */                Render.renderMap(primaryStage, root);            /*            |=======================================|            |   3. Update world                     |            |=======================================|             */            /*            |=======================================|            |   4. Update Physics                   |            |=======================================|             *///        while (Config.gameOver != true){//            //Game need to end manual, or, it'll "not responding"!//            Config.gameOver = true;//        }//        new AnimationTimer() {//            @Override//            public void handle(long now) {////            }//        }.start();        System.out.println("End game!");        /*        | Close window if player don't play more!         *///       GameStage.closeWindow(primaryStage); // ném vào game loop + if    }    public static void main (String[] args){        launch(args);    }}