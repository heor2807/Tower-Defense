package core;import core.Config;import javafx.animation.AnimationTimer;import javafx.scene.Group;import javafx.scene.Scene;import javafx.scene.canvas.GraphicsContext;import javafx.scene.control.Button;import javafx.scene.control.ToggleButton;import javafx.scene.control.ToggleGroup;import javafx.scene.image.ImageView;import javafx.stage.Stage;/*|=======================================================================||   This class start a game field (game field's status, config, ...)    ||=======================================================================| */public class GameStage {    private static int playerHP = Config.GAME_HEART;    private static int playerFinance = Config.GAME_START_MONEY;    public GameStage (){}    public int getPlayerHP() {        return playerHP;    }    public void setPlayerHP(int playerHP) {        this.playerHP = playerHP;    }    public int getPlayerFinance() {        return playerFinance;    }    public void decreaseHP (){        setPlayerHP(getPlayerHP()-1);    }    public static void earnMoney(int money){        playerFinance += money;    }    public static void buyTower(int money) {        playerFinance -= money;    }    public static void playGame(Stage primaryStage, Scene theScene, GameField gameField, Group root, GraphicsContext gc){        ToggleGroup towerToggle = new ToggleGroup();        //Button        ImageView ivNormalTowerButton = new ImageView(GameField.getImageSheet().imageSheet.get(8*23 + 19));        ToggleButton normalTowerButton = new ToggleButton("$1           Normal Tower", ivNormalTowerButton);        root.getChildren().add(normalTowerButton);        normalTowerButton.setLayoutX(Config.TILE_HORIZONTAL*Config.MAP_WIDTH);        //Button        ImageView ivMachineGunTowerButton = new ImageView(GameField.getImageSheet().imageSheet.get(10*23 + 20));        ToggleButton machineGunTowerButton = new ToggleButton("$5  Machine Gun Tower", ivMachineGunTowerButton);        root.getChildren().add(machineGunTowerButton);        machineGunTowerButton.setLayoutX(Config.TILE_HORIZONTAL*Config.MAP_WIDTH);        machineGunTowerButton.setLayoutY(Config.TILE_VERTICAL+12);        //Button        ImageView ivRocketTowerButton = new ImageView(GameField.getImageSheet().imageSheet.get(8*23 + 20));        ToggleButton rocketTowerButton = new ToggleButton("$20          Rocket Tower", ivRocketTowerButton);        root.getChildren().add(rocketTowerButton);        rocketTowerButton.setLayoutX(Config.TILE_HORIZONTAL*Config.MAP_WIDTH);        rocketTowerButton.setLayoutY((Config.TILE_VERTICAL+12)*2);        //Button        ImageView ivSniperTowerButton = new ImageView(GameField.getImageSheet().imageSheet.get(10*23 + 19));        ToggleButton sniperTowerButton = new ToggleButton("$10           Sniper Tower", ivSniperTowerButton);        root.getChildren().add(sniperTowerButton);        sniperTowerButton.setLayoutX(Config.TILE_HORIZONTAL*Config.MAP_WIDTH);        sniperTowerButton.setLayoutY((Config.TILE_VERTICAL+12)*3);        normalTowerButton.setToggleGroup(towerToggle);        machineGunTowerButton.setToggleGroup(towerToggle);        rocketTowerButton.setToggleGroup(towerToggle);        sniperTowerButton.setToggleGroup(towerToggle);        AnimationTimer timer = new AnimationTimer() {            long time = System.nanoTime();            @Override            public void handle(long now) {                GameController.mouseClicked(theScene, gameField, root, gc, towerToggle, normalTowerButton, machineGunTowerButton, rocketTowerButton, sniperTowerButton);                gameField.update(now - time);                gameField.draw(gc, gameField);                gameField.gameOver(theScene, gameField, root, gc, primaryStage);                //if(player don't play more, click exit button to exit the game) GameStage.closeWindow(primaryStage);            }        };        timer.start();        primaryStage.show();    }    public static boolean hasEnoughMoney(int cost){        if (playerFinance >= cost) return true;        return false;    }    public boolean gameOver(){        if(getPlayerHP()<=0) return true;        return false;    }}