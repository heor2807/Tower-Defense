package core;/*|===================================================||   This class manages every object in the field    ||===================================================| */import Entity.Immoveable.Mountain;import Entity.Immoveable.Road;import Graphic.ImageSheet;import Graphic.TileMap;import javafx.event.ActionEvent;import javafx.event.EventHandler;import javafx.scene.Group;import javafx.scene.control.Button;import javafx.scene.image.Image;import javafx.scene.image.ImageView;public class GameField {    private static TileMap background = new TileMap(); //first layer    private static TileMap road = new TileMap();       //second layer    private static TileMap rockTree = new TileMap();   //third layer    private static TileMap spawn = new TileMap();      //final layer    private static ImageSheet imageSheet = new ImageSheet(); //tiled sheet    private static Road roadInfo = new Road();    public GameField (){        loadMap();        loadGameplay();    }    public ImageSheet getImageSheet (){        return imageSheet;    }    public TileMap getBackground (){        return background;    }    public TileMap getRoad (){        return road;    }    public TileMap getRockTree() {        return rockTree;    }    public TileMap getSpawn() {        return spawn;    }    public static void loadMap(){        //input layer data        background.readFile("Map/background.txt");        road.readFile("Map/road.txt");        rockTree.readFile("Map/rockTree.txt");        spawn.readFile("Map/spawn.txt");        //print to check        background.printMapData();        road.printMapData();        rockTree.printMapData();        spawn.printMapData();        //load tiled sheet        imageSheet.loadImageViewSheet("Graphic/towerDefense_tilesheet.png");        // render to check        // Render.renderMap(background.getTileMap(), imageSheet);        //load road information        roadInfo.setRoadInfo(road.getTileMap());        roadInfo.printTestRoadInfo();    }    public static void loadGameplay(){    }    public static void loadSlot(Group root){/*        //      Any image will do fine            Image towerSlot = imageSheet.getImage(0);            ImageView slotView = new ImageView(towerSlot);            Button Slot = new Button("", slotView);            int slotCount = 0;            for (int i = 0; i < Config.MAP_HEIGHT; i++) {                for (int j = 0; j < Config.MAP_WIDTH; j++) {                    if (spawn.getTileMap(i,j)!=0) {//                  Put coordinates in slot                        slotView.get(slotCount).setX(j*64);                        slotView.get(slotCount).setY(i*64);                        //    iv.setVisible(false);                        Slot.add(new Button("", slotView.get(slotCount)));                        slotCount++;                    }                }            }            root.getChildren().addAll(Slot);            for (int i = 0; i < Slot.size(); i++) {                Slot.get(i).setOnAction(new EventHandler<ActionEvent>() {                    @Override                    public void handle(ActionEvent event) {                        System.out.println("Done");                    }                });            }*/        }}