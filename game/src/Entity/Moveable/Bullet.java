package Entity.Moveable;import Entity.AbstractEntity;import Entity.GameEntity;import Entity.Moveable.Enemy.Enemy;import core.Config;import core.GameField;import javafx.scene.canvas.GraphicsContext;import javafx.scene.image.Image;import java.util.ArrayList;public class Bullet extends AbstractEntity {    //default    private double speed = Config.NORMAL_BULLET_SPEED;    private double range = Config.NORMAL_TOWER_RANGE;    private double damage = Config.NORMAL_BULLET_STRENGTH;    private Image img;    private Enemy enemy;    // 11*23 + 12    public Bullet(double posX, double posY, double width, double height) {        super(posX, posY, width, height);        setImg(GameField.getImageSheet().imageSheet.get(11*23 + 19));        setInfo(speed, range, damage);    }    public final void setInfo(double speed, double range, double damage){        this.speed = speed;        this.range = range;        this.damage = damage;    }    public void setSpeed(double speed) {        this.speed = speed;    }    public double getSpeed() {        return speed;    }    public double getRange() {        return range;    }    public void setRange(double range) {        this.range = range;    }    public double getDamage() {        return damage;    }    public void setDamage(double damage) {        this.damage = damage;    }    public void setImg(Image img) { this.img = img; }    public Image getImg() { return img; }    public void update(double angle){        setPosY(getPosY() - 32);    }    @Override    public void draw(GraphicsContext gc) {//        setPosY(getPosY() - 32);        gc.drawImage(getImg(), getPosX(), getPosY());    }    public static double findAngle(double posX, double posY, ArrayList<Enemy> enemies){        double dx = 0 - Config.TILE_HORIZONTAL/2;        // Minus to correct for coord re-mapping        double dy = -(0 - Config.TILE_VERTICAL/2);        double inRads = Math.atan2(dy, dx);        // We need to map to coord system when 0 degree is at 3 O'clock, 270 at 12 O'clock        if (inRads < 0)            inRads = Math.abs(inRads);        else            inRads = 2 * Math.PI - inRads;        System.out.println(inRads);        return Math.toDegrees(inRads);    }}