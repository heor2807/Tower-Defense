package Entity.Moveable;import Entity.AbstractEntity;import Entity.GameEntity;import Entity.Moveable.Enemy.Enemy;import core.Config;import core.GameField;import javafx.scene.canvas.GraphicsContext;import javafx.scene.image.Image;import java.util.ArrayList;public class Bullet extends AbstractEntity {    //default    private double speed = Config.NORMAL_BULLET_SPEED;    private double range = Config.NORMAL_TOWER_RANGE;    private double damage = Config.NORMAL_BULLET_STRENGTH;    private Image img;    private Enemy enemy;    // 11*23 + 12    public Bullet(double posX, double posY, double width, double height) {        super(posX, posY, width, height);        setImg(GameField.getImageSheet().imageSheet.get(11*23 + 19));        setInfo(speed, range, damage);    }    public final void setInfo(double speed, double range, double damage){        this.speed = speed;        this.range = range;        this.damage = damage;    }    public Enemy getEnemy() {        return enemy;    }    public Image getImg() { return img; }    public double getSpeed() {        return speed;    }    public double getRange() {        return range;    }    public double getDamage() {        return damage;    }    public void setRange(double range) {        this.range = range;    }    public void setDamage(double damage) {        this.damage = damage;    }    public void setImg(Image img) { this.img = img; }    public void setSpeed(double speed) {        this.speed = speed;    }    public void setEnemy(Enemy enemy) {        this.enemy = enemy;    }    public void destroy(Bullet bullet){        GameField.getRemovingBullet().add(bullet);    }    public void update(){        if (checkBulletMeetEnemy()) {            //TODO: harm the enemy            getEnemy().doAttack(getDamage());            destroy(this);        }    }    public boolean checkBulletMeetEnemy(){        if(Math.round(getPosX()) == Math.round(getEnemy().getPosX()) && (Math.round(getPosY()) == Math.round(getEnemy().getPosY()))){            //System.out.println("HIT!");            return true;        }        return false;    }    @Override    public void draw(GraphicsContext gc) {        double x = getEnemy().getPosX() - getPosX();        double y = getEnemy().getPosY() - getPosY();        double inRads = Math.atan2(x, y);        setPosX(getPosX() + getSpeed() * Math.sin(inRads));        setPosY(getPosY() + getSpeed() * Math.cos(inRads));        //System.out.println("SHOOT!");        gc.drawImage(getImg(), getPosX(), getPosY());    }}