package Entity.Immoveable;import core.Config;public class Road implements GameTile {    private double[][] roadInfo = new double[Config.MAP_HEIGHT][Config.MAP_WIDTH];    public Road(){}    public Road(int[][] roadTileMap){        setRoadInfo(roadTileMap);    }    public double[][] getRoadInfo() {        return roadInfo;    }    public double getRoadInfo(int i, int j){        if(i < 0 || i >= roadInfo.length) return Integer.MAX_VALUE;        if(j < 0 || j >= roadInfo[i].length) return Integer.MAX_VALUE;        return roadInfo[i][j];    }    public void setRoadInfo(int[][] roadTileMap) {        /**         * "0" is immovable and "1" is movable         * "2" is the spawn and "3" is the target         */        for (int i=0; i<Config.MAP_HEIGHT; i++){            for (int j=0; j<Config.MAP_WIDTH; j++){                if (roadTileMap[i][j] != 0) {                    roadInfo[i][j] = Math.sqrt(Math.pow((3-i), 2) + Math.pow((12-j), 2));                }                else roadInfo[i][j] = 0;            }        }        //hack code (hack target, hack spawn)        // i = 3, j = 12 (target)        roadInfo[6][1] = 2; roadInfo[6][2] = 2;        roadInfo[3][12] = 3; roadInfo[4][12] = 3;    }    public void printTestRoadInfo(){        System.out.println("Road Information");        for (int i=0; i<Config.MAP_HEIGHT; i++){            for (int j=0; j<Config.MAP_WIDTH; j++){                System.out.print(roadInfo[i][j] + " ");            }            System.out.println();        }    }}